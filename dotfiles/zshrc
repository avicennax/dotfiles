# ~/.zshrc
# Author: Simon Haxby
# Reduced from oh-my-zsh
# License: MIT

# Starship
eval "$(starship init zsh)"
export STARSHIP_CONFIG=~/.starship

## PATH
export PATH="$HOME/bin:/usr/local/sbin:$PATH"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Preferred editor for local and remote sessions
export EDITOR='vim'

# Configure history settings
SAVEHIST=9999
HISTSIZE=9999
HISTFILE=$HOME/.zsh_history
setopt append_history
setopt hist_ignore_dups
setopt extended_history
setopt hist_verify
setopt share_history
setopt hist_reduce_blanks
setopt inc_append_history

# Set zsh options
setopt pushd_to_home
setopt notify
setopt check_jobs

# nocorrect
alias n="nocorrect"

# Key-bindings
bindkey '\e[1;2C' forward-word
bindkey '\e[1;2D' backward-word

# Load user shell variables
[ -f ~/.variables ] && . ~/.variables

# Load bash functions into session.
[ -f ~/.functions ] && . ~/.functions

# Alias definitions.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.
[ -f ~/.aliases ] && . ~/.aliases

# Local machine definitions and settings
[ -f ~/.locals ] && . ~/.locals


#--------
# fzf
#--------

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f ~/.fzf.zsh ]; then
    source ~/.fzf.zsh
else
    [ -f ~/.completion.zsh ] && source ~/.completion.zsh
    [ -f ~/.key-bindings.zsh ] && source ~/.key-bindings.zsh
fi

export FZF_COMPLETION_TRIGGER='--'

# Combine z & fzf
# https://github.com/junegunn/fzf/wiki/examples#z
if [ -f ~/.z.sh ]; then
  # (TODO) move to using zoxide (requires fzf >= 33.0)
  source ~/.z.sh
  # Don't use zoxide / z
  unalias z 2> /dev/null
  z() {
    [ $# -gt 0 ] && _z "$*" && return
    cd "$(_z -l 2>&1 | fzf --height 40% --nth 2.. --reverse --inline-info +s --tac --query "${*##-* }" | sed 's/^[0-9,.]* *//')"
  }
fi

_fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}

#--------

# Rust
[ -f "$HOME/.cargo/env" ] && source "$HOME/.cargo/env"

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$(${HOME}/miniconda3/bin/conda 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "${HOME}/miniconda3/etc/profile.d/conda.sh" ]; then
        . "${HOME}/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="${HOME}/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
